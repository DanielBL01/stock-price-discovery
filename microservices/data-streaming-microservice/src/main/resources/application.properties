# NOTE: It's best practice is to let Spring Boot configure beans using application properties.
# This means instead of writing configuration Java classes, resort to writing it into the application.properties

# ----- Kafka configurations -----
# Kafka Producer Properties
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.bootstrap-servers=localhost:9092

# Kafka Consumer Properties
spring.kafka.consumer.group-id=group-id
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.bootstrap-servers=localhost:9092

# IMPORTANT - Make sure to trust your own packages when serializing/deserializing your own models
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# ----- H2 Database Configurations -----
# Configuration for h2 database
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=123

# Configuration for h2 console which is default to (http://localhost:8080/h2-console)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true